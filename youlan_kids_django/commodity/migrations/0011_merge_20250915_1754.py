# Generated by Django 3.2.25 on 2025-09-15 09:54

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('commodity', '0009_update_commodity_id_to_string'),
        ('commodity', '0010_force_drop_foreign_key'),
    ]

    operations = [
        # 第一步：尝试删除外键约束（使用存储过程方式处理不存在的情况）
        migrations.RunSQL(
            sql="""
            DROP PROCEDURE IF EXISTS drop_foreign_key_if_exists;
            DELIMITER $$
            CREATE PROCEDURE drop_foreign_key_if_exists()
            BEGIN
                DECLARE CONTINUE HANDLER FOR SQLEXCEPTION BEGIN END;
                ALTER TABLE `Commodity_Situation` DROP FOREIGN KEY `Commodity_Situation_commodity_id_c7b42ead_fk_Commodity`;
            END$$
            DELIMITER ;
            CALL drop_foreign_key_if_exists();
            DROP PROCEDURE drop_foreign_key_if_exists;
            """,
            reverse_sql='',
        ),
        
        # 第二步：为Commodity表添加临时字符串字段
        migrations.RunSQL(
            sql='ALTER TABLE `Commodity_data` ADD COLUMN `temp_commodity_id` VARCHAR(100) NULL;',
            reverse_sql='ALTER TABLE `Commodity_data` DROP COLUMN `temp_commodity_id`;',
        ),
        
        # 第三步：将整数类型的commodity_id转换为字符串并复制到临时字段
        migrations.RunSQL(
            sql='UPDATE `Commodity_data` SET `temp_commodity_id` = CAST(`commodity_id` AS CHAR(100));',
            reverse_sql='',
        ),
        
        # 第四步：修改Commodity表的主键为字符串类型
        migrations.RunSQL(
            sql='ALTER TABLE `Commodity_data` DROP PRIMARY KEY, CHANGE COLUMN `commodity_id` `commodity_id_old` INT NULL, CHANGE COLUMN `temp_commodity_id` `commodity_id` VARCHAR(100) NOT NULL, ADD PRIMARY KEY (`commodity_id`);',
            reverse_sql='ALTER TABLE `Commodity_data` DROP PRIMARY KEY, CHANGE COLUMN `commodity_id` `temp_commodity_id` VARCHAR(100) NULL, CHANGE COLUMN `commodity_id_old` `commodity_id` INT NOT NULL AUTO_INCREMENT, ADD PRIMARY KEY (`commodity_id`);',
        ),
        
        # 第五步：为CommoditySituation表添加临时字符串字段
        migrations.RunSQL(
            sql='ALTER TABLE `Commodity_Situation` ADD COLUMN `temp_commodity_id` VARCHAR(100) NULL;',
            reverse_sql='ALTER TABLE `Commodity_Situation` DROP COLUMN `temp_commodity_id`;',
        ),
        
        # 第六步：更新CommoditySituation表的关联字段
        migrations.RunSQL(
            sql='UPDATE `Commodity_Situation` cs INNER JOIN `Commodity_data` c ON cs.commodity_id = c.commodity_id_old SET cs.temp_commodity_id = c.commodity_id;',
            reverse_sql='',
        ),
        
        # 第七步：修改CommoditySituation表的主键为字符串类型
        migrations.RunSQL(
            sql='ALTER TABLE `Commodity_Situation` DROP PRIMARY KEY, CHANGE COLUMN `commodity_id` `commodity_id_old` INT NULL, CHANGE COLUMN `temp_commodity_id` `commodity_id` VARCHAR(100) NOT NULL, ADD PRIMARY KEY (`commodity_id`);',
            reverse_sql='ALTER TABLE `Commodity_Situation` DROP PRIMARY KEY, CHANGE COLUMN `commodity_id` `temp_commodity_id` VARCHAR(100) NULL, CHANGE COLUMN `commodity_id_old` `commodity_id` INT NOT NULL AUTO_INCREMENT, ADD PRIMARY KEY (`commodity_id`);',
        ),
        
        # 第八步：清理旧字段
        migrations.RunSQL(
            sql='ALTER TABLE `Commodity_data` DROP COLUMN `commodity_id_old`;',
            reverse_sql='',
        ),
        migrations.RunSQL(
            sql='ALTER TABLE `Commodity_Situation` DROP COLUMN `commodity_id_old`;',
            reverse_sql='',
        ),
    ]
